{
    "name" : "options",
    "label" : "Simulation Options",
    "type" : "struct",
    "fields" : [
        {
            "name" : "Simulation",
            "label" : "General simulation options",
            "type" : "struct",
            "fields" : [
                {
                    "name" : "simulation_type",
                    "label" : "Simulation Type",
                    "type" : "enum",
                    "values" : ["FullCascade","IonsOnly","CascadesOnly"],
                    "valueLabels" : ["Full Cascade (Ions & Cascades)","Ions Only","Cascades Only"],
                    "toolTip" : "Define the type of simulation.",
                    "whatsThis" : ["- Full Cascade: Simulate full damage cascades, follow recoils",
                                   "- Ions Only: Simulate only ions, do not follow recoils",
                                   "- Cascades Only: Simulate recoil cascades"]
                },
                {
                    "name" : "screening_type",
                    "label": "Screening Type",
                    "type" : "enum",
                    "values" : ["None","LenzJensen","KrC","Moliere","ZBL"],
                    "valueLabels" : ["Unscreened","Lenz-Jensen","Kr-C","Moliere","ZBL"],
                    "toolTip" : "Define the type of screening potential.",
                    "whatsThis" : ["- Unscreened: Unscreened Coulomb potential",
                                   "- Lenz-Jensen: Lenz-Jensen screening",
                                   "- Kr-C: Kr-C screening",
                                   "- Moliere - Moliere screening",
                                   "- ZBL - Ziegler-Biersack-Littmark universal screening"]
                },
                {
                    "name" : "scattering_calculation",
                    "label": "Scattering Calculation",
                    "type" : "enum",
                    "values" : ["Corteo4bitTable","ZBL_MAGICK"],
                    "valueLabels" : ["Corteo 4-bit interpolation","MAGICK formula"],
                    "toolTip" : "Define how ion scattering is calculated.",
                    "whatsThis" : ["- Corteo 4-bit interpolation: Using 4-bit Corteo interpolation tables",
                                   "- MAGICK formula: Analytical calculation using ZBL's formula"]
                },
                {
                    "name" : "eloss_calculation",
                    "label": "Energy Loss",
                    "type" : "enum",
                    "values" : ["EnergyLossOff","EnergyLoss","EnergyLossAndStraggling"],
                    "valueLabels" : ["Off", "Loss only", "Loss & Stragling"],
                    "toolTip" : "Setting for electronic energy loss calculation.",
                    "whatsThis" : ["Off: No energy loss calculation",
                                   "Loss Only: Only energy loss is taken into account",
                                   "Loss & Stragling: Both energy loss and straggling are calculated"]
                },
                {
                    "name" : "straggling_model",
                    "label": "Straggling Model",
                    "type" : "enum",
                    "values" : ["BohrStraggling","ChuStraggling","YangStraggling"],
                    "valueLabels" : ["Bohr","Chu","Yang"],
                    "toolTip" : "Model used for electronic straggling calculations.",
                    "whatsThis" : ""
                },
                {
                    "name" : "nrt_calculation",
                    "label": "NRT calculation",
                    "type" : "enum",
                    "values" : ["NRT_element","NRT_average"],
                    "valueLabels" : ["Per element","Average"],
                    "toolTip" : "Define how to implement NRT in multielemental targets.",
                    "whatsThis" : ["Per element: NRT calculated per recoil atom",
                                   "Average: NRT calculated using material average values"]
                }
            ]    
        },
        {
            "name" : "Transport",
            "label" : "Ion transport options",
            "type" : "struct",
            "fields" : [
                {
                    "name" : "min_energy",
                    "label" : "Energy cutoff (eV)",
                    "type" : "float",
                    "min" : 0.001,
                    "max" : 1.0e6,
                    "digits" : 3,
                    "toolTip" : "Lowest kinetic energy of a simulated ion.",
                    "whatsThis" : ["When the energy of an ion goes below this cutoff,",
                                   "the ion history is terminated."]
                },
                {
                    "name" : "flight_path_type",
                    "label": "Flight Path Type",
                    "type" : "enum",
                    "values" : ["AtomicSpacing","Constant","MendenhallWeller","IPP"],
                    "valueLabels" : ["Atomic Spacing","Constant","Mendenhall-Weller","IPP"],
                    "toolTip" : "Flight path selection algorithm.",
                    "whatsThis" : ["- Atomic Spacing: Constant flight path equal to material's interatomic distance",
                                   "- Constant: User defined constant flight path",
                                   "- Mendenhall-Weller: SRIM-like path selection algorithm",
                                   "- IPP: IONS++ algorithm"]
                },
                {
                    "name" : "flight_path_const",
                    "label": "Const. Flight Path (nm)",
                    "type" : "float",
                    "min" : 0.001,
                    "max" : 1.0e6,
                    "digits" : 3,
                    "toolTip" : "Constant Flight Path in nm.",
                    "whatsThis" : ""
                },
                {
                    "name" : "max_rel_eloss",
                    "label": "Max ΔE/E",
                    "type" : "float",
                    "min" : 0.001,
                    "max" : 1.0,
                    "digits" : 3,
                    "toolTip" : "Maximum relative energy loss per flight path.",
                    "whatsThis" : ""
                },
                {
                    "name" : "min_recoil_energy",
                    "label": "Min recoil E (eV)",
                    "type" : "float",
                    "min" : 0.001,
                    "max" : 1e6,
                    "digits" : 3,
                    "toolTip" : "Minimum recoil energy in eV.",
                    "whatsThis" : ""
                },
                {
                    "name" : "max_mfp",
                    "label": "Max MFP (nm)",
                    "type" : "float",
                    "min" : 0.001,
                    "max" : 1e30,
                    "digits" : 3,
                    "toolTip" : "Maximum ion mean free path in nm.",
                    "whatsThis" : ""
                },
                {
                    "name" : "allow_sub_ml_scattering",
                    "label" : "Sub-ML flight path",
                    "type" : "bool",
                    "toolTip" : "Allow sub-monolayer ion flight path.",
                    "whatsThis" : ""
                }
            ]
        },
        {
            "name" : "IonBeam",
            "label" : "Ion Source",
            "type" : "struct",
            "fields" : [
                {
                    "name" : "ion",
                    "label" : "Ion",
                    "type" : "struct",
                    "fields" : [
                        {
                            "name": "atomic_number",
                            "label": "Atomic number",
                            "type": "int",
                            "min": 1,
                            "max": 92,
                            "digits": 3,
                            "toolTip": "Atomic number of the generated ions.",
                            "whatsThis": ""
                        },
                        {
                            "name": "atomic_mass",
                            "label": "Atomic mass",
                            "type": "float",
                            "min": 0.001,
                            "max": 1000.0,
                            "digits": 6,
                            "toolTip": "Atomic mass of the generated ions.",
                            "whatsThis": ""
                        }
                    ]
                },
                {
                    "name" : "energy_distribution",
                    "label" : "Energy Distribution",
                    "type" : "struct",
                    "fields" : [
                        {
                            "name" : "type",
                            "label": "Distribution type",
                            "type" : "enum",
                            "values" : ["SingleValue","Uniform","Gaussian"],
                            "valueLabels" : ["Single Value","Uniform","Gaussian"],
                            "toolTip" : "Type of energy distribution of the generated ions.",
                            "whatsThis" : ["- Single Value: All ions have the same energy",
                                           "- Uniform: Ion energy distributed uniformly within center ± fwhm/2",
                                           "- Gaussian: Ion energy distributed according to the Gaussian(Normal) distribution around the center value with given fwhm",
                                           "",
                                           "When sampling from a distribution, invalid energy values (e.g. negative) are rejected and a new sample is drawn."
                                        ]
                        },
                        {
                            "name" : "center",
                            "label": "Central energy (eV)",
                            "type" : "float",
                            "min" : 1.0,
                            "max" : 1.0e10,
                            "digits" : 6, 
                            "toolTip" : "Central energy of generated ions in eV.",
                            "whatsThis" : ""
                        }, 
                        {
                            "name" : "fwhm",
                            "label": "FWHM (eV)",
                            "type" : "float",
                            "min" : 1,
                            "max" : 1.0e10,
                            "digits" : 6, 
                            "toolTip" : "Full-width at half-maximum of the generated ions energy distribution in eV.",
                            "whatsThis" : ""
                        }       
                    ]
                },
                {
                    "name" : "spatial_distribution",
                    "label" : "Spatial Distribution",
                    "type" : "struct",
                    "fields" : [
                        {
                            "name" : "geometry",
                            "label": "Source geometry",
                            "type" : "enum",
                            "values" : ["Surface","Volume"],
                            "valueLabels" : ["Surface","Volume"],
                            "toolTip" : "Geometry of the ion source.",
                            "whatsThis" : ["- Surface: Ions are generated on a simulation boundary surface.",
                                           "- Volume: Ions are generated within the simulation volume."
                                        ]
                        },
                        {
                            "name" : "type",
                            "label": "Distribution type",
                            "type" : "enum",
                            "values" : ["SingleValue","Uniform","Gaussian"],
                            "valueLabels" : ["Single Value","Uniform","Gaussian"],
                            "toolTip" : "Type of spatial distribution of the generated ions.",
                            "whatsThis" : ["- Single Value: All ions have the same initial position",
                                           "- Uniform: Ion position distributed uniformly around the center position",
                                           "- Gaussian: Ion position distributed according to the Gaussian(Normal) distribution around the center position with given fwhm",
                                           "",
                                           "Surface(2D) distributions are sampled on the lower yz-plane bounding the simulation box.",
                                           "In a Uniform surface(volume) distribution, the position is sampled uniformly in a square(cube) of width fwhm around the center.",
                                           "In a Gaussian distribution, each component of the position vector is sampled from a Gaussian with the same fwhm around the center.",
                                           "When sampling from a distribution, out-of-bounds positions are rejected and a new sample is drawn."
                                        ]
                        },
                        {
                            "name" : "center",
                            "label": "Center position (nm)",
                            "type" : "vector3d",
                            "min" : -1.0e10,
                            "max" : 1.0e10,
                            "digits" : 6, 
                            "toolTip" : "Central initial position of generated ions, [x,y,z] in nm.",
                            "whatsThis" : "Must be either within the simulation box or at the lowest yz-plane boundary."
                        }, 
                        {
                            "name" : "fwhm",
                            "label": "FWHM (nm)",
                            "type" : "float",
                            "min" : 0.1,
                            "max" : 1.0e10,
                            "digits" : 6, 
                            "toolTip" : "Full-width at half-maximum of the generated ions position distribution in nm.",
                            "whatsThis" : ""
                        }       
                    ]
                },
                {
                    "name" : "angular_distribution",
                    "label" : "Angular Distribution",
                    "type" : "struct",
                    "fields" : [
                        {
                            "name" : "type",
                            "label": "Distribution type",
                            "type" : "enum",
                            "values" : ["SingleValue","Uniform","Gaussian"],
                            "valueLabels" : ["Single Value","Uniform","Gaussian"],
                            "toolTip" : "Type of angular distribution of the generated ions.",
                            "whatsThis" : ["- Single Value: All ions have the same initial direction",
                                           "- Uniform: Ion direction distributed uniformly within a cone around the central direction",
                                           "- Gaussian: Ion direction distributed according to the Gaussian(Normal) distribution around the central direction"
                                    ]
                        },
                        {
                            "name" : "center",
                            "label": "Center direction",
                            "type" : "vector3d",
                            "min" : -1.0e3,
                            "max" : 1.0e3,
                            "digits" : 3, 
                            "toolTip" : "Ion beam central direction vector, [nx,ny,nz], unnormalized.",
                            "whatsThis" : ""
                        }, 
                        {
                            "name" : "fwhm",
                            "label": "FWHM (srad)",
                            "type" : "float",
                            "min" : 0.01,
                            "max" : 1.0e3,
                            "digits" : 3, 
                            "toolTip" : "Width in srad of a cone around the central ion beam direction.",
                            "whatsThis" : ["For the Uniform distribution, fwhm defines a cone around the main direction, where the direction of generated ions is sampled uniformly",
                                           "The Gaussian distrubution is not yet implemented"
                                    ]
            
                        } 
                    ]
                }
            ]
        },
        {
            "name" : "Output",
            "label": "Output",
            "type" : "struct",
            "fields" : [
                {
                    "name" : "title",
                    "label": "Title",
                    "type" : "string",
                    "toolTip" : "Short title describing the simulation.",
                    "whatsThis" : ""
                },
                {
                    "name" : "storage_interval",
                    "label": "Update interval (ms)",
                    "type" : "int",
                    "min" : 100,
                    "max" : 2147483647,
                    "toolTip" : "Time interval to update stored data.",
                    "whatsThis" : ""
                },
                {
                    "name" : "store_transmitted_ions",
                    "label": "Store transmitted ions",
                    "type" : "bool",
                    "toolTip" : "Store a table with ions that exit the simulation.",
                    "whatsThis" : ""
                },
                {
                    "name" : "store_pka",
                    "label": "Store PKAs",
                    "type" : "bool",
                    "toolTip" : "Store a table of PKA data.",
                    "whatsThis" : ""
                },
                {
                    "name" : "store_dedx",
                    "label": "Store dE/dx",
                    "type" : "bool",
                    "toolTip" : "Store stopping tables for each ion/material combination.",
                    "whatsThis" : ""
                }
            ]
        },
        {
            "name" : "Driver",
            "label": "Driver",
            "type" : "struct",
            "fields" : [
                {
                    "name" : "max_no_ions",
                    "label": "Max # of ions to simulate",
                    "type" : "int",
                    "min" : 1,
                    "max" : 2147483647,
                    "toolTip" : "Maximum number of histories to simulate.",
                    "whatsThis" : "The simulation will stop when the maximum number of histories has been reached."
                },
                {
                    "name" : "threads",
                    "label": "Number of threads",
                    "type" : "int",
                    "min" : 1,
                    "max" : 1000,
                    "toolTip" : "Number of execution threads.",
                    "whatsThis" : "The simulation will run in parallel the specified ."
                },
                {
                    "name" : "seed",
                    "label": "Random number seed",
                    "type" : "int",
                    "min" : 1,
                    "max" : 2147483647,
                    "toolTip" : "Random number generator seed.",
                    "whatsThis" : ""
                }
            ]
        },
        {
            "name": "Target",
            "label": "Target",
            "type": "struct",
            "fields" : [
                {
                    "name" : "size",
                    "label": "Size [Lx, Ly, Lz] (nm)",
                    "type" : "vector3d",
                    "min" : 0.001,
                    "max" : 1.0e7,
                    "digits" : 6,
                    "toolTip" : "Size in nm of the simulation volume along the x-, y- and z-axis.",
                    "whatsThis" : ""
                },
                {
                    "name" : "origin",
                    "label": "Origin [x₀,y₀,z₀] (nm)",
                    "type" : "vector3d",
                    "min" : -1.0e7,
                    "max" : 1.0e7,
                    "digits" : 6,
                    "toolTip" : "Origin of the simulation space.",
                    "whatsThis" : ""
                },
                {
                    "name" : "cell_count",
                    "label": "Cell count [Nx, Ny, Nz]",
                    "type" : "ivector3d",
                    "min" : 1,
                    "max" : 1000000,
                    "toolTip" : "Number of simulation cells along the x-, y- and z-axis.",
                    "whatsThis" : ""
                },
                {
                    "name" : "periodic_bc",
                    "label": "Periodic boundary [x, y, z]",
                    "type" : "ivector3d",
                    "min" : 0,
                    "max" : 1,
                    "toolTip" : "Select periodic boundary conditions along the axes (0=normal, 1=periodic).",
                    "whatsThis" : ""
                }
            ]
        }
    ]
}
