#include "corteo.h"

#include <iostream>
#include <fstream>

#include "xs.h"

using std::cout;
using std::endl;
using std::ofstream;

int gencorteo4bit();
int gencorteo6bit();

int main(int argc, char* argv[])
{
    gencorteo4bit();
    gencorteo6bit();
    return 0;
}

const char* preample = "/*\n"
                       " * file generated by gencorteo utility of Iradina++\n"
                       " * \n"
                       " * do not edit \n"
                       " */\n";


const char* func4bit =
    "const float* corteo4bitdata() { return corteo4bitdata_; } \n";

const char* func6bit =
    "const float* corteo6bitdata() { return corteo6bitdata_; } \n";

int gencorteo4bit()
{
    typedef xs_corteo_index<4> corteo4bit; // 4bit corteo indexing

    xs_quad xs_quad_zbl; // xs object with ZBL screening & quadrature integration

    cout << "Computing 4-bit corteo scattering table";

    // create output file
    ofstream ofs("corteo4bitdata.cpp");
    ofs << preample << endl;
    ofs << "static const float corteo4bitdata_[] = {\n";

    // compute matrix for each reduced energy, reduced impact parameter pair
    int k = 0;
    int klast = corteo4bit::rows * corteo4bit::cols - 1;
    for(corteo4bit::e_index ie; ie<ie.end(); ie++) {

        if (ie % (corteo4bit::rows/10)==0) {
            cout << ".";
            cout.flush();
        }

        for(corteo4bit::s_index is; is<is.end(); is++) {
            float sin2ThetaBy2 = xs_quad_zbl.sin2Thetaby2(*ie, *is);
            ofs << sin2ThetaBy2;
            if (k!=klast) ofs << ',';
            k++;
            if (k % 16 ==0) ofs << endl;
        }
    }

    ofs << "}; \n\n";

    ofs << func4bit << endl;

    cout << " done.\n";
    cout.flush();

    return 0;
}

int gencorteo6bit()
{
    typedef xs_corteo_index<6> corteo6bit; // 6bit corteo indexing

    xs_quad xs_quad_zbl; // xs object with ZBL screening & quadrature integration

    cout << "Computing 6-bit corteo scattering table";

    // create output file
    ofstream ofs("corteo6bitdata.cpp");
    ofs << preample << endl;
    ofs << "static const float corteo6bitdata_[] = {\n";

    // compute matrix for each reduced energy, reduced impact parameter pair
    int k = 0;
    int klast = corteo6bit::rows * corteo6bit::cols - 1;
    for(corteo6bit::e_index ie; ie<ie.end(); ie++) {

        if (ie % (corteo6bit::rows/10)==0) {
            cout << ".";
            cout.flush();
        }

        for(corteo6bit::s_index is; is<is.end(); is++) {
            float sin2ThetaBy2 = xs_quad_zbl.sin2Thetaby2(*ie, *is);
            ofs << sin2ThetaBy2;
            if (k!=klast) ofs << ',';
            k++;
            if (k % 16 ==0) ofs << endl;
        }
    }

    ofs << "}; \n\n";

    ofs << func6bit << endl;

    cout << " done.\n";
    cout.flush();

    return 0;
}
